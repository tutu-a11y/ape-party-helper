name: Build Multi-Architecture Binaries

on: workflow_dispatch
permissions: write-all

jobs:
  build-architectures:
    strategy:
      matrix:
        goarch: [amd64, arm64]
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Golang
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Build ${{ matrix.goarch }} binary
        env:
          GOOS: darwin
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 1
        run: go build -o party.ape.helper_${{ matrix.goarch }}

      - name: Upload architecture-specific artifact
        uses: actions/upload-artifact@v3
        with:
          name: party-ape-helper-${{ matrix.goarch }}
          path: party.ape.helper_${{ matrix.goarch }}

  build-universal:
    needs: build-architectures
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download amd64 artifact
        uses: actions/download-artifact@v3
        with:
          name: party-ape-helper-amd64
          path: .

      - name: Download arm64 artifact
        uses: actions/download-artifact@v3
        with:
          name: party-ape-helper-arm64
          path: .

      - name: Verify downloaded files
        run: ls -la party.ape.helper_*

      - name: Create Universal binary
        run: |
          lipo -create -output party.ape.helper_universal \
            party.ape.helper_amd64 \
            party.ape.helper_arm64
          lipo -info party.ape.helper_universal

      - name: Release all binaries
        uses: softprops/action-gh-release@v2
        with:
          name: Multi-Architecture Builds
          tag_name: latest
          token: ${{ secrets.GITHUB_TOKEN }}
          files:
            party.ape.helper_amd64
            party.ape.helper_arm64
            party.ape.helper_universal
